/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.planta;

import OPERACIONES.Operaciones;
import java.awt.Toolkit;
import java.io.File;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javax.swing.JOptionPane;

/**
 *
 * @author pc
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/IMAGENGRANDES/logo del software.png")));
          this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Educacion = new javax.swing.JButton();
        Operaciones = new javax.swing.JButton();
        info = new javax.swing.JButton();
        Desarrolladores = new javax.swing.JButton();
        Salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 51, 0));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(102, 51, 0)));

        jPanel2.setBackground(new java.awt.Color(0, 51, 0));
        jPanel2.setForeground(new java.awt.Color(102, 51, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(102, 51, 0));
        jLabel1.setFont(new java.awt.Font("Calisto MT", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Software GardenGrow Learning");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel3.setBackground(new java.awt.Color(102, 51, 0));
        jLabel3.setFont(new java.awt.Font("Calisto MT", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENGRANDES/Software GardenGrow Learning (1).png"))); // NOI18N
        jLabel3.setToolTipText("");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, -1, -1));

        Educacion.setBackground(new java.awt.Color(204, 255, 255));
        Educacion.setForeground(new java.awt.Color(153, 51, 0));
        Educacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos ciclo del agua/icons8-casa-con-jardín-48.png"))); // NOI18N
        Educacion.setToolTipText("Educacion.");
        Educacion.setBorder(null);
        Educacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EducacionActionPerformed(evt);
            }
        });

        Operaciones.setBackground(new java.awt.Color(204, 255, 255));
        Operaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos ciclo del agua/icons8-pila-de-compost-48.png"))); // NOI18N
        Operaciones.setToolTipText("Operaciones.");
        Operaciones.setBorder(null);
        Operaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperacionesActionPerformed(evt);
            }
        });

        info.setBackground(new java.awt.Color(204, 255, 255));
        info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos ciclo del agua/icons8-parque-con-farola-48.png"))); // NOI18N
        info.setToolTipText("Sobre el sistema.");
        info.setBorder(null);
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        Desarrolladores.setBackground(new java.awt.Color(204, 255, 255));
        Desarrolladores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos ciclo del agua/icons8-farmer-hombre-48.png"))); // NOI18N
        Desarrolladores.setToolTipText("Aprendizajes y concluciones del Sistema.");
        Desarrolladores.setBorder(null);
        Desarrolladores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DesarrolladoresActionPerformed(evt);
            }
        });

        Salir.setBackground(new java.awt.Color(204, 255, 255));
        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos ciclo del agua/icons8-ir-48.png"))); // NOI18N
        Salir.setToolTipText("Salir.");
        Salir.setBorder(null);
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Desarrolladores, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Salir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(info, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Operaciones, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Educacion, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(Educacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Operaciones)
                .addGap(64, 64, 64)
                .addComponent(info)
                .addGap(49, 49, 49)
                .addComponent(Desarrolladores)
                .addGap(62, 62, 62)
                .addComponent(Salir)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void EducacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EducacionActionPerformed
        
        try {
            // Ruta al archivo de audio
            File audioFile = new File("src/Sonidos/Menu_entrar.wav");
            if (!audioFile.exists()) {
                throw new IllegalArgumentException("El archivo de audio no existe: " + audioFile.getAbsolutePath());
            }

            // Crea el objeto Media y MediaPlayer
            String audioPath = audioFile.toURI().toString();
            MediaPlayer mediaPlayer = new MediaPlayer(new Media(audioPath));

            // Reproduce el audio
            mediaPlayer.play();

            // Espera a que el audio termine de reproducirse
            // (opcional, solo si quieres que el programa espere hasta que termine la reproducción)
            mediaPlayer.setOnEndOfMedia(() -> System.out.println("Reproducción finalizada"));
            mediaPlayer.play();
            
            Menu1 acceso = new Menu1();
            acceso.setVisible(true);
            acceso.setLocationRelativeTo(null);
            this.setVisible(false);
            
        } catch (Exception e) {
            // Manejo de excepciones
            e.printStackTrace();
            
        }
        
           
    }//GEN-LAST:event_EducacionActionPerformed

    private void OperacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperacionesActionPerformed
       
         try {
            // Ruta al archivo de audio
            File audioFile = new File("src/Sonidos/Menu_entrar.wav");
            if (!audioFile.exists()) {
                throw new IllegalArgumentException("El archivo de audio no existe: " + audioFile.getAbsolutePath());
            }

            // Crea el objeto Media y MediaPlayer
            String audioPath = audioFile.toURI().toString();
            MediaPlayer mediaPlayer = new MediaPlayer(new Media(audioPath));

            // Reproduce el audio
            mediaPlayer.play();

            // Espera a que el audio termine de reproducirse
            // (opcional, solo si quieres que el programa espere hasta que termine la reproducción)
            mediaPlayer.setOnEndOfMedia(() -> System.out.println("Reproducción finalizada"));
            mediaPlayer.play();
            
            Operaciones acceso = new Operaciones();
            acceso.setVisible(true);
            acceso.setLocationRelativeTo(null);
            this.setVisible(false);
            
        } catch (Exception e) {
            // Manejo de excepciones
            e.printStackTrace();
            
        }
        
      
    }//GEN-LAST:event_OperacionesActionPerformed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        
         try {
            // Ruta al archivo de audio
            File audioFile = new File("src/Sonidos/Menu_entrar.wav");
            if (!audioFile.exists()) {
                throw new IllegalArgumentException("El archivo de audio no existe: " + audioFile.getAbsolutePath());
            }

            // Crea el objeto Media y MediaPlayer
            String audioPath = audioFile.toURI().toString();
            MediaPlayer mediaPlayer = new MediaPlayer(new Media(audioPath));

            // Reproduce el audio
            mediaPlayer.play();

            // Espera a que el audio termine de reproducirse
            // (opcional, solo si quieres que el programa espere hasta que termine la reproducción)
            mediaPlayer.setOnEndOfMedia(() -> System.out.println("Reproducción finalizada"));
            mediaPlayer.play();
            
            String mensaje = "<html><body style='width: 900px; font-size: 11px;'>" +
        "<h1>Descripción General del Sistema</h1>" +
        "<p>El sistema autosustentable para la regeneración de espacios verdes, es un enfoque integral diseñado para restaurar, mantener y potenciar la biodiversidad de un entorno escolar. Este sistema busca crear un ecosistema equilibrado que no solo embellezca el espacio, sino que también sirva como un recurso educativo y un modelo de sostenibilidad para la comunidad.</p>" +
        "<h1>Propósito</h1>" +
        "<ul>" +
        "<li>Regenerar el Espacio Verde: Transformar áreas degradadas en espacios verdes saludables y funcionales que fomenten la biodiversidad.</li>" +
        "<li>Fomentar la Educación Ambiental: Proporcionar a los estudiantes y a la comunidad herramientas y conocimientos sobre sostenibilidad, conservación y cuidado del medio ambiente.</li>" +
        "<li>Promover la Participación Comunitaria: Involucrar a estudiantes, docentes y padres en actividades de cultivo y mantenimiento, fortaleciendo así el sentido de comunidad.</li>" +
        "<li>Establecer un Modelo de Sostenibilidad: Crear un ejemplo replicable en otras instituciones educativas y comunidades sobre cómo gestionar espacios verdes de manera autosustentable.</li>" +
        "</ul>" +
        "<h1>Funciones del Sistema</h1>" +
        "<ol>" +
        "<li>Regeneración Ecológica:</li>" +
        "<ul>" +
        "<li>Implementar prácticas de restauración ecológica que favorezcan el crecimiento de flora nativa y la recuperación de la fauna local.</li>" +
        "<li>Mejorar la calidad del suelo mediante el uso de técnicas de compostaje y abono orgánico.</li>" +
        "</ul>" +
        "<li>Educación y Concienciación:</li>" +
        "<ul>" +
        "<li>Desarrollar programas educativos que enseñen a los estudiantes sobre la importancia de la biodiversidad, el ciclo de vida de las plantas y el impacto humano en el medio ambiente.</li>" +
        "<li>Organizar talleres y actividades prácticas que fomenten el aprendizaje activo.</li>" +
        "</ul>" +
        "<li>Mantenimiento Sostenible:</li>" +
        "<ul>" +
        "<li>Establecer un calendario de riego, poda y cuidado general del espacio verde que minimice el uso de recursos hídricos y químicos.</li>" +
        "<li>Utilizar métodos de control biológico para manejar plagas y enfermedades en las plantas.</li>" +
        "</ul>" +
        "<li>Participación Comunitaria:</li>" +
        "<ul>" +
        "<li>Crear un programa de voluntariado que invite a estudiantes, padres y miembros de la comunidad a participar en las actividades de mantenimiento y cuidado del espacio verde.</li>" +
        "<li>Fomentar la colaboración con organizaciones locales para enriquecer las actividades y recursos disponibles.</li>" +
        "</ul>" +
        "<li>Monitoreo y Evaluación:</li>" +
        "<ul>" +
        "<li>Implementar un sistema de monitoreo que evalúe periódicamente el estado del ecosistema, incluyendo la salud de las plantas, la biodiversidad presente y el impacto de las actividades realizadas.</li>" +
        "<li>Recoger datos que permitan realizar ajustes en las prácticas y mejorar continuamente el sistema.</li>" +
        "</ul>" +
        "<li>Documentación y Difusión:</li>" +
        "<ul>" +
        "<li>Mantener un registro detallado de todas las actividades realizadas, así como de los resultados obtenidos.</li>" +
        "<li>Compartir los aprendizajes y logros con la comunidad escolar y más allá, a través de informes, presentaciones y eventos comunitarios.</li>" +
        "</ul>" +
        "</ol>" +
        "</body></html>";

// Mostrar el mensaje en un JOptionPane
JOptionPane.showMessageDialog(null, mensaje,
        "SOBRE EL SISTEMA", JOptionPane.DEFAULT_OPTION,
        new javax.swing.ImageIcon(getClass().getResource(
                "/iconos/ciclo.png")));
            
        } catch (Exception e) {
            // Manejo de excepciones
            e.printStackTrace();
            
        }
        
        
    }//GEN-LAST:event_infoActionPerformed

    private void DesarrolladoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DesarrolladoresActionPerformed
       
        try {
            // Ruta al archivo de audio
            File audioFile = new File("src/Sonidos/Menu_entrar.wav");
            if (!audioFile.exists()) {
                throw new IllegalArgumentException("El archivo de audio no existe: " + audioFile.getAbsolutePath());
            }

            // Crea el objeto Media y MediaPlayer
            String audioPath = audioFile.toURI().toString();
            MediaPlayer mediaPlayer = new MediaPlayer(new Media(audioPath));

            // Reproduce el audio
            mediaPlayer.play();

            // Espera a que el audio termine de reproducirse
            // (opcional, solo si quieres que el programa espere hasta que termine la reproducción)
            mediaPlayer.setOnEndOfMedia(() -> System.out.println("Reproducción finalizada"));
            mediaPlayer.play();
            
            String mensaje = "<html><body style='width: 900px; font-size: 11px;'>" +
    "<h1>Aprendizajes Más Importantes</h1>" +
    "<ul>" +
    "<li><strong>Diagnóstico Exhaustivo:</strong> Consideramos que realizar un diagnóstico completo del espacio es fundamental. Esto nos permitió identificar las limitaciones y potencialidades que afectan el cultivo.</li>" +
    "<li><strong>Optimización del Espacio:</strong> Diseñamos el jardín de manera eficiente, lo que maximiza el uso de recursos y favorece el crecimiento de las plantas.</li>" +
    "<li><strong>Adaptación a Necesidades Locales:</strong> Al conocer las necesidades específicas del entorno escolar, pudimos personalizar nuestro enfoque, asegurando la sostenibilidad del proyecto.</li>" +
    "<li><strong>Análisis del Suelo:</strong> Evaluar las propiedades del suelo resultó crucial para seleccionar las plantas adecuadas y mejorar la fertilidad cuando fue necesario.</li>" +
    "<li><strong>Sistema de Información Integrado:</strong> El sistema sistema de información autosustentable nos facilito en gran medida el control y la toma de decisiones basadas en datos proporcionados por el usuario, sobre el cultivo de las plantas ornamentales.</li>" +
    "<li><strong>Monitoreo Continuo:</strong> Implementar el sistema nos permitió detectar cambios en el suelo realizando monitoreos por recomendacion del mismo, y realizar intervenciones oportunas.</li>" +
    "<li><strong>Ejecución Práctica:</strong> La implementación del sistema demostró nuestra capacidad para aplicar lo aprendido en un contexto real, fomentando la educación ambiental entre los estudiantes.</li>" +
    "</ul>" +
    "<h1>Conclusiones</h1>" +
    "<ul>" +
    "<li>Un diagnóstico adecuado resultó esencial para el éxito del proyecto, permitiéndonos tomar decisiones informadas sobre el cultivo.</li>" +
    "<li>Un diseño eficiente del jardín no solo aumentó la productividad, sino que también contribuyó a crear un ecosistema más saludable.</li>" +
    "<li>La adaptación a las condiciones locales garantizó la sostenibilidad del proyecto a largo plazo.</li>" +
    "<li>La calidad del suelo se demostró determinante para el éxito del cultivo, y su análisis fue una prioridad en nuestro trabajo.</li>" +
    "<li>Adoptar un enfoque sistemático y basado en datos mejoró la eficiencia del proyecto y nos permitió hacer ajustes en tiempo real.</li>" +
    "<li>El monitoreo regular aseguró que nuestro sistema se mantuviera saludable y productivo, previniendo problemas futuros.</li>" +
    "<li>La ejecución práctica del sistema fomentó la educación ambiental y creó conciencia ecológica entre los estudiantes, contribuyendo a una cultura de sostenibilidad en la comunidad escolar.</li>" +
    "</ul>" +
    "<p>Nos sentimos orgullosos de lo que hemos logrado y estamos comprometidos a seguir aprendiendo y mejorando en el futuro.</p>" +
    "</body></html>";

// Mostrar el mensaje en un JOptionPane
JOptionPane.showMessageDialog(null, mensaje,
    "APRENDIZAJES Y CONCLUSIONES SOBRE EL SISTEMA", JOptionPane.DEFAULT_OPTION,
    new javax.swing.ImageIcon(getClass().getResource("/iconos/ciclo.png")));
            
        } catch (Exception e) {
            // Manejo de excepciones
            e.printStackTrace();
            
        }
    }//GEN-LAST:event_DesarrolladoresActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Desarrolladores;
    private javax.swing.JButton Educacion;
    private javax.swing.JButton Operaciones;
    private javax.swing.JButton Salir;
    private javax.swing.JButton info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
